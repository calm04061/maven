var FindProxyForURL = function(init, profiles) {
    return function(url, host) {
        "use strict";
        var result = init, scheme = url.substr(0, url.indexOf(":"));
        do {
            result = profiles[result];
            if (typeof result === "function") result = result(url, host, scheme);
        } while (typeof result !== "string" || result.charCodeAt(0) === 43);
        return result;
    };
}("+auto switch", {
    "+auto switch": function(url, host, scheme) {
        "use strict";
        if (/(?:^|\.)dmd465cu5ivsb\.cloudfront\.net$/.test(host)) return "+vr";
        if (/amazonaws/.test(host)) return "+vr";
        if (/(?:^|\.)amazon/.test(host)) return "+vr";
        if (/(?:^|\.)googlesyndication\.com$/.test(host)) return "+vr";
        if (/(?:^|\.)ggpht\.com$/.test(host)) return "+vr";
        if (/(?:^|\.)ytimg\.com$/.test(host)) return "+vr";
        if (/googlevideo/.test(host)) return "+vr";
        if (/googleapis\.com/.test(host)) return "+vr";
        if (/googleusercontent\.com/.test(host)) return "+vr";
        if (/google\.com/.test(host)) return "+vr";
        if (/youtube/.test(host)) return "+vr";
        if (/ytimg/.test(host)) return "+vr";
        if (/ggpht/.test(host)) return "+vr";
        if (/tampermonkey/.test(host)) return "+vr";
        if (/dongtaiwang/.test(host)) return "+vr";
        if (/sonatype/.test(host)) return "+vr";
        if (/docker/.test(host)) return "+vr";
        if (/telerik/.test(host)) return "+vr";
        if (/golang/.test(host)) return "+vr";
        if (/mozilla/.test(host)) return "+vr";
        if (/portainer\.io/.test(host)) return "+vr";
        if (/cloudfront/.test(host)) return "+vr";
        if (/developer\.android\.com/.test(host)) return "+vr";
        if (/gstatic\.com/.test(host)) return "+vr";
        if (/facebook/.test(host)) return "+vr";
        if (/lithium/.test(host)) return "+vr";
        if (/cdn-apple/.test(host)) return "+vr";
        if (/fbcdn/.test(host)) return "+vr";
        if (/shadowsocks\.org/.test(host)) return "+vr";
        if (/s4a\.cat/.test(host)) return "+vr";
        if (/cdn\.mouseflow\.com/.test(host)) return "+vr";
        if (/stackovernet/.test(host)) return "+vr";
        if (/issues\.apache\.org/.test(host)) return "+vr";
        if (/chromium/.test(host)) return "+vr";
        if (/quora\.com/.test(host)) return "+vr";
        if (/bearssl\.org/.test(host)) return "+vr";
        if (/twitter/.test(host)) return "+vr";
        if (/twimg/.test(host)) return "+vr";
        if (/adobe/.test(host)) return "+vr";
        if (/ccc\.edu/.test(host)) return "+vr";
        if (/aws/.test(host)) return "+vr";
        if (/multcloud/.test(host)) return "+vr";
        if (/material/.test(host)) return "+vr";
        if (/^nexus\.xdf\.cn$/.test(host)) return "DIRECT";
        if (/v2ray/.test(host)) return "+vr";
        if (/wireguard/.test(host)) return "+vr";
        if (/tunsafe/.test(host)) return "+vr";
        if (/paypal/.test(host)) return "+vr";
        if (/kubernetes/.test(host)) return "+vr";
        if (/github/.test(host)) return "+vr";
        if (/gitlab\.com/.test(host)) return "+vr";
        if (/jfrog/.test(host)) return "+vr";
        if (/noip/.test(host)) return "+vr";
        if (/tokyo/.test(host)) return "+vr";
        if (/pornhub/.test(host)) return "+vr";
        if (/azul/.test(host)) return "+vr";
        if (/phncdn/.test(host)) return "+vr";
        if (/balena/.test(host)) return "+vr";
        if (/vaddin/.test(host)) return "+vr";
        if (/psiphon3/.test(host)) return "+vr";
        if (/ipfs/.test(host)) return "+vr";
        if (/vertx/.test(host)) return "+vr";
        if (/gcr/.test(host)) return "+vr";
        if (/69story/.test(host)) return "+vr";
        if (/gcr\.io/.test(host)) return "+vr";
        if (/heroku\.com/.test(host)) return "+vr";
        if (/sourceforge/.test(host)) return "+vr";
        if (/chrome\.com/.test(host)) return "+vr";
        if (/reddit/.test(host)) return "+vr";
        if (/tokyo-hot\.com/.test(host)) return "+vr";
        if (/zerotier/.test(host)) return "+vr";
        if (/stripe/.test(host)) return "+vr";
        if (/fmj-sf/.test(host)) return "+vr";
        if (/ipfs/.test(host)) return "+vr";
        if (/sqlite/.test(host)) return "+vr";
        if (/msecnd/.test(host)) return "+vr";
        if (/cloudflare\.com/.test(host)) return "+vr";
        if (/arduino/.test(host)) return "+vr";
        if (/rustup\.rs/.test(host)) return "+vr";
        if (/bootcdn\.net/.test(host)) return "+vr";
        if (/stripe\.com/.test(host)) return "+vr";
        if (/^"githubusercontent\.com"$/.test(host)) return "+vr";
        if (/netsarang\.com/.test(host)) return "+vr";
        if (/mercadolibre/.test(host)) return "+vr";
        if (/doubleclick\.net/.test(host)) return "+vr";
        if (/ jsdelivr/.test(host)) return "+vr";
        if (/v2fly\.org/.test(host)) return "+vr";
        return "DIRECT";
    },
    "+vr": function(url, host, scheme) {
        "use strict";
        if (/^127\.0\.0\.1$/.test(host) || /^::1$/.test(host) || /^localhost$/.test(host)) return "DIRECT";
        return "SOCKS5 proxy.calm0406.com:1080; SOCKS proxy.calm0406.com:1080";
    }
});
